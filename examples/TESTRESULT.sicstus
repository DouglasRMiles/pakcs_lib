Loading program "rev"...
append [1,2] [3,4]
[1,2,3,4]
rev [1,2,3,4,5,6,7,8,9,10]
[10,9,8,7,6,5,4,3,2,1]
Loading program "higher"...
g1
[1,3,2]
g2
[1,3,2]
g3
3
g4
120
g5
120
Loading program "quicksort"...
qsort [2,3,1,0]
[0,1,2,3]
Loading program "qsortlet"...
qsort [2,3,1,0]
[0,1,2,3]
Loading program "inflists"...
goal1
[1,1,2,3,5,8,13,21,34,55]
goal2
[2,3,5,7,11]
Loading program "family_rel"...
goal1 child
{child=Susan} True
{child=Peter} True
grandfather g c
{g=Antony, c=Susan} True
{g=Antony, c=Peter} True
{g=Bill, c=Andrew} True
{g=Antony, c=Andrew} True
Loading program "family_fun"...
(father child) =:= John
{child=Susan} success
{child=Peter} success
grandfather g c
{g=Antony, c=Susan} True
{g=Antony, c=Peter} True
{g=Bill, c=Andrew} True
{g=Antony, c=Andrew} True
Loading program "horseman"...
horseman m h (int2nat 8) (int2nat 20)
{m=S (S (S (S (S (S O))))), h=S (S O)} success
horseman m h (S (S O)) f
{m=O, h=S (S O), f=S (S (S (S (S (S (S (S O)))))))} success
{m=S O, h=S O, f=S (S (S (S (S (S O)))))} success
{m=S (S O), h=O, f=S (S (S (S O)))} success
Loading program "first"...
goal1
[O,S O]
goal2 x y
{x=S O, y=O} success
Loading program "member"...
goal2 x
{x=2} True
{x=3} True
Loading program "colormap"...
goal1 l1 l2 l3 l4
{l1=Red, l2=Yellow, l3=Green, l4=Red} success
{l1=Red, l2=Yellow, l3=Green, l4=Blue} success
{l1=Red, l2=Yellow, l3=Blue, l4=Red} success
{l1=Red, l2=Yellow, l3=Blue, l4=Green} success
{l1=Red, l2=Green, l3=Yellow, l4=Red} success
{l1=Red, l2=Green, l3=Yellow, l4=Blue} success
{l1=Red, l2=Green, l3=Blue, l4=Red} success
{l1=Red, l2=Green, l3=Blue, l4=Yellow} success
{l1=Red, l2=Blue, l3=Yellow, l4=Red} success
{l1=Red, l2=Blue, l3=Yellow, l4=Green} success
{l1=Red, l2=Blue, l3=Green, l4=Red} success
{l1=Red, l2=Blue, l3=Green, l4=Yellow} success
{l1=Yellow, l2=Red, l3=Green, l4=Yellow} success
{l1=Yellow, l2=Red, l3=Green, l4=Blue} success
{l1=Yellow, l2=Red, l3=Blue, l4=Yellow} success
{l1=Yellow, l2=Red, l3=Blue, l4=Green} success
{l1=Yellow, l2=Green, l3=Red, l4=Yellow} success
{l1=Yellow, l2=Green, l3=Red, l4=Blue} success
{l1=Yellow, l2=Green, l3=Blue, l4=Red} success
{l1=Yellow, l2=Green, l3=Blue, l4=Yellow} success
{l1=Yellow, l2=Blue, l3=Red, l4=Yellow} success
{l1=Yellow, l2=Blue, l3=Red, l4=Green} success
{l1=Yellow, l2=Blue, l3=Green, l4=Red} success
{l1=Yellow, l2=Blue, l3=Green, l4=Yellow} success
{l1=Green, l2=Red, l3=Yellow, l4=Green} success
{l1=Green, l2=Red, l3=Yellow, l4=Blue} success
{l1=Green, l2=Red, l3=Blue, l4=Yellow} success
{l1=Green, l2=Red, l3=Blue, l4=Green} success
{l1=Green, l2=Yellow, l3=Red, l4=Green} success
{l1=Green, l2=Yellow, l3=Red, l4=Blue} success
{l1=Green, l2=Yellow, l3=Blue, l4=Red} success
{l1=Green, l2=Yellow, l3=Blue, l4=Green} success
{l1=Green, l2=Blue, l3=Red, l4=Yellow} success
{l1=Green, l2=Blue, l3=Red, l4=Green} success
{l1=Green, l2=Blue, l3=Yellow, l4=Red} success
{l1=Green, l2=Blue, l3=Yellow, l4=Green} success
{l1=Blue, l2=Red, l3=Yellow, l4=Green} success
{l1=Blue, l2=Red, l3=Yellow, l4=Blue} success
{l1=Blue, l2=Red, l3=Green, l4=Yellow} success
{l1=Blue, l2=Red, l3=Green, l4=Blue} success
{l1=Blue, l2=Yellow, l3=Red, l4=Green} success
{l1=Blue, l2=Yellow, l3=Red, l4=Blue} success
{l1=Blue, l2=Yellow, l3=Green, l4=Red} success
{l1=Blue, l2=Yellow, l3=Green, l4=Blue} success
{l1=Blue, l2=Green, l3=Red, l4=Yellow} success
{l1=Blue, l2=Green, l3=Red, l4=Blue} success
{l1=Blue, l2=Green, l3=Yellow, l4=Red} success
{l1=Blue, l2=Green, l3=Yellow, l4=Blue} success
goal2 l1 l2 l3 l4
{l1=Red, l2=Yellow, l3=Green, l4=Red} success
{l1=Red, l2=Yellow, l3=Green, l4=Blue} success
{l1=Red, l2=Yellow, l3=Blue, l4=Red} success
{l1=Red, l2=Yellow, l3=Blue, l4=Green} success
{l1=Red, l2=Green, l3=Yellow, l4=Red} success
{l1=Red, l2=Green, l3=Yellow, l4=Blue} success
{l1=Red, l2=Green, l3=Blue, l4=Red} success
{l1=Red, l2=Green, l3=Blue, l4=Yellow} success
{l1=Red, l2=Blue, l3=Yellow, l4=Red} success
{l1=Red, l2=Blue, l3=Yellow, l4=Green} success
{l1=Red, l2=Blue, l3=Green, l4=Red} success
{l1=Red, l2=Blue, l3=Green, l4=Yellow} success
{l1=Yellow, l2=Red, l3=Green, l4=Yellow} success
{l1=Yellow, l2=Red, l3=Green, l4=Blue} success
{l1=Yellow, l2=Red, l3=Blue, l4=Yellow} success
{l1=Yellow, l2=Red, l3=Blue, l4=Green} success
{l1=Yellow, l2=Green, l3=Red, l4=Yellow} success
{l1=Yellow, l2=Green, l3=Red, l4=Blue} success
{l1=Yellow, l2=Green, l3=Blue, l4=Red} success
{l1=Yellow, l2=Green, l3=Blue, l4=Yellow} success
{l1=Yellow, l2=Blue, l3=Red, l4=Yellow} success
{l1=Yellow, l2=Blue, l3=Red, l4=Green} success
{l1=Yellow, l2=Blue, l3=Green, l4=Red} success
{l1=Yellow, l2=Blue, l3=Green, l4=Yellow} success
{l1=Green, l2=Red, l3=Yellow, l4=Green} success
{l1=Green, l2=Red, l3=Yellow, l4=Blue} success
{l1=Green, l2=Red, l3=Blue, l4=Yellow} success
{l1=Green, l2=Red, l3=Blue, l4=Green} success
{l1=Green, l2=Yellow, l3=Red, l4=Green} success
{l1=Green, l2=Yellow, l3=Red, l4=Blue} success
{l1=Green, l2=Yellow, l3=Blue, l4=Red} success
{l1=Green, l2=Yellow, l3=Blue, l4=Green} success
{l1=Green, l2=Blue, l3=Red, l4=Yellow} success
{l1=Green, l2=Blue, l3=Red, l4=Green} success
{l1=Green, l2=Blue, l3=Yellow, l4=Red} success
{l1=Green, l2=Blue, l3=Yellow, l4=Green} success
{l1=Blue, l2=Red, l3=Yellow, l4=Green} success
{l1=Blue, l2=Red, l3=Yellow, l4=Blue} success
{l1=Blue, l2=Red, l3=Green, l4=Yellow} success
{l1=Blue, l2=Red, l3=Green, l4=Blue} success
{l1=Blue, l2=Yellow, l3=Red, l4=Green} success
{l1=Blue, l2=Yellow, l3=Red, l4=Blue} success
{l1=Blue, l2=Yellow, l3=Green, l4=Red} success
{l1=Blue, l2=Yellow, l3=Green, l4=Blue} success
{l1=Blue, l2=Green, l3=Red, l4=Yellow} success
{l1=Blue, l2=Green, l3=Red, l4=Blue} success
{l1=Blue, l2=Green, l3=Yellow, l4=Red} success
{l1=Blue, l2=Green, l3=Yellow, l4=Blue} success
Loading program "account"...
goal1 b
{b=250} success
goal2 b
{b=150} success
goal3 s
{s=[Deposit 100,Balance 100,Withdraw 30,Balance 70,Withdraw 30,Balance 40,Deposit 70,Balance 110,Withdraw 30,Balance 80,Withdraw 30,Balance 50]} success
Loading program "maxtree"...
goal2
Node (Node (Leaf 3) (Leaf 3)) (Node (Leaf 3) (Leaf 3))
Loading program "assembler"...
main
[9,4,9,0]
Loading program "ralign"...
goal1
[[O,O,O,A,B],[O,A,B,C,D],[O,O,A,B,C],[A,B,C,D,E]]
goal2
[[O,O,O,A,B],[O,A,B,C,D],[O,O,A,B,C],[A,B,C,D,E]]
Loading program "tctest"...
f :: Int -> Int
i :: a -> a
k :: a -> Int
Loading program "rectype"...
h :: ([Int],[Bool])
Loading program "iodemo"...
dialog
Ihr Name?
Hallo michael, rueckwaerts lautet Ihr Name: leahcim
Loading program "england"...
q1 x
{x=Gloucester} True
{x=Bath} True
q2 x y
{x=Bristol, y=Bath} True
{x=Sherbourne, y=Shaftesbury} True
{x=Dorchester, y=Sherbourne} True
{x=Cirencester, y=Cheltenham} True
{x=Cheltenham, y=Gloucester} True
q4l
[Bristol,Taunton,Bath,Bournemouth,Gloucester,Torquay,Penzance,Plymouth,Exeter,Winchester,Dorchester,Cirencester,Truro,Cheltenham,Shaftesbury,Sherbourne]
q5l
[Salisbury,Gloucester,Cirencester,Cheltenham]
q7 x
{x=Somerset} True
{x=Gloucestershire} True
{x=Avon} True
q10
6
Loading program "queens"...
queens [1,2,3,4]
[2,4,1,3]
[3,1,4,2]
Loading program "diamond"...
diamond 10
                                       1    
                                  11       2    
                              21      12       3    
                          31      22      13       4    
                      41      32      23      14       5    
                  51      42      33      24      15       6    
              61      52      43      34      25      16       7    
          71      62      53      44      35      26      17       8    
      81      72      63      54      45      36      27      18       9    
  91      82      73      64      55      46      37      28      19      10    
      92      83      74      65      56      47      38      29      20    
          93      84      75      66      57      48      39      30    
              94      85      76      67      58      49      40    
                  95      86      77      68      59      50    
                      96      87      78      69      60    
                          97      88      79      70    
                              98      89      80    
                                  99      90    
                                     100    
Loading program "chords"...
run sounds
Proposed chords:
Amin/8 (0)
Gmaj/8 (0) || Dmin/8 (0)
Gmaj/8 (0) || Gmaj7/8 (0)
Fmaj/8 (0) || Amin/8 (0)
Cmaj/8 (0)
Fmaj/4 Cmaj/4 (0) || Fmaj/4 Emin/4 (0) || Amin/4 Cmaj/4 (0) || Amin/4 Emin/4 (0)
Cmaj/8 (0)
Fmaj/4 Cmaj/4 (0) || Fmaj/4 Emin/4 (0) || Amin/4 Cmaj/4 (0) || Amin/4 Emin/4 (0)
Fmaj/8 (0) || Amin/8 (0)
Fmaj/8 (3) || Amin/8 (3)
Fmaj/4 Cmaj/4 (3) || Fmaj/4 Emin/4 (3) || Amin/4 Cmaj/4 (3) || Amin/4 Emin/4 (3)
Cmaj/8 (4) || Emin/8 (4) || Amin/8 (3)
Cmaj/8 (7)
Gmaj/4 Fmaj/4 (0) || Gmaj/4 Amin/4 (0) || Emin/4 Fmaj/4 (0) || Emin/4 Amin/4 (0)
run nicolas
Proposed chords:
Cmaj/8 (0)
Gmaj/8 (0) || Dmin/8 (0)
Fmaj/8 (6) || Amin/8 (6)
Gmaj/8 (0) || Emin/8 (0)
Cmaj/8 (0)
Gmaj/8 (0) || Dmin/8 (0)
Fmaj/8 (6) || Amin/8 (6)
Gmaj/8 (0) || Dmin/8 (0)
Cmaj/8 (0) || Emin/8 (0)
Dmin/8 (0)
Gmaj7/8 (6) || Dmin/8 (6)
Cmaj/8 (0)
Cmaj/8 (0)
Gmaj/8 (0) || Dmin/8 (0)
Fmaj/4 Gmaj/4 (0) || Fmaj/4 Emin/4 (0) || Amin/4 Gmaj/4 (0) || Amin/4 Emin/4 (0)
Fmaj/8 (0) || Amin/8 (0)
Loading program "arithseq"...
l1
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
l2
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
l3
[1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77,81,85,89,93,97]
l4
[1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77]
Loading program "multgen"...
goal1
[(1,4),(1,5),(2,4),(2,5),(3,4),(3,5)]
goal2
[(1,1),(2,1),(2,2),(3,1),(3,2),(3,3)]
goal3
[(3,4,5),(5,12,13),(6,8,10),(7,24,25),(8,15,17),(9,12,15),(9,40,41),(10,24,26),(12,16,20),(12,35,37),(14,48,50),(15,20,25),(15,36,39),(16,30,34),(18,24,30),(20,21,29),(21,28,35),(24,32,40),(27,36,45),(30,40,50)]
Loading program "psort"...
goal 6
[1,2,3,4,5,6]
Loading program "default"...
abs 0
0
abs 3
1
swap [3]
[3]
swap [3,4]
[4,3]
swap [3,4,5]
[3,4,5]
Loading program "casetest"...
swap [1]
[1]
swap [1,2]
[2,1]
swap [1,2,3]
[1,2,3]
f [1,2]
152
g (Just "xyz")
True
g (Just "ab")
False
h [1,2]
True
h [1,3]
False
h [2,div 1 0]
False
Loading program "expr_parser"...
((expression val) "(10+5*2)/4") =:= []
{val=5} success
Loading program "palindrome"...
(pali "abaaba") =:= []
success
pali5
["aaaaa","aabaa","ababa","abbba","baaab","babab","bbabb","bbbbb"]
Loading program "mortgage"...
mortgage 1.0E+05 180.0 0.01 r 0.0
{r=1200.1680620915145} success
Loading program "smm"...
smm l
{l=[9,5,6,7,1,0,8,2]} success
Loading program "smm2"...
smm
[9,5,6,7,1,0,8,2]
Loading program "accountport"...
goal1 b
{b=250} success
goal2 b
{b=[Deposit 100,Withdraw 30,Withdraw 30,Deposit 70,Withdraw 30,Withdraw 30]} success
Loading program "nameserver"...
gn1
Answer: 0
gn2
Answer: 0
pn1
pn2
gn1
Answer: 42
gn2
Answer: 43
closeServer
Loading program "addserver"...
addClient "localhost" 3 4
Answer: 7
stopServer "localhost"

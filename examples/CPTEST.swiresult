  ______      __       _    _    ______   _______     
 |  __  |    /  \     | |  / /  |  ____| |  _____|   Portland Aachen Kiel
 | |  | |   / /\ \    | |_/ /   | |      | |_____    Curry System
 | |__| |  / /__\ \   |  _  |   | |      |_____  |   
 |  ____| / ______ \  | | \ \   | |____   _____| |   Version 1.9.1 (7)
 |_|     /_/      \_\ |_|  \_\  |______| |_______|   January 2009

Curry2Prolog(swi 5.6) Compiler Environment (Version of 13/01/09)
(RWTH Aachen, CAU Kiel, Portland State University)

Bug reports: mh@informatik.uni-kiel.de

Type ":h" for help

Prelude> generating rev.fcy ...
Goal: append [1,2] [3,4] :: [Int]
Result: [1,2,3,4]
More solutions? [y(es)/N(o)/a(ll)] Goal: rev [1,2,3,4,5,6,7,8,9,10] :: [Int]
Result: [10,9,8,7,6,5,4,3,2,1]
More solutions? [y(es)/N(o)/a(ll)] generating higher.fcy ...
Goal: g1 :: [Int]
Result: [1,3,2]
More solutions? [y(es)/N(o)/a(ll)] Goal: g2 :: [Int]
Result: [1,3,2]
More solutions? [y(es)/N(o)/a(ll)] Goal: g3 :: Int
Result: 3
More solutions? [y(es)/N(o)/a(ll)] Goal: g4 :: Int
Result: 120
More solutions? [y(es)/N(o)/a(ll)] Goal: g5 :: Int
Result: 120
More solutions? [y(es)/N(o)/a(ll)] generating quicksort.fcy ...
Goal: qsort [2,3,1,0] :: [Int]
Result: [0,1,2,3]
More solutions? [y(es)/N(o)/a(ll)] generating qsortlet.fcy ...
Goal: qsort [2,3,1,0] :: [Int]
Result: [0,1,2,3]
More solutions? [y(es)/N(o)/a(ll)] generating inflists.fcy ...
Goal: goal1 :: [Int]
Result: [1,1,2,3,5,8,13,21,34,55]
More solutions? [y(es)/N(o)/a(ll)] Goal: goal2 :: [Int]
Result: [2,3,5,7,11]
More solutions? [y(es)/N(o)/a(ll)] generating family_rel.fcy ...
Goal: goal1 child :: Bool
Free variables in goal: child
Result: True
Bindings: 
child=Susan
More solutions? [y(es)/N(o)/a(ll)] Result: True
Bindings: 
child=Peter
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
Goal: grandfather g c :: Bool
Free variables in goal: g, c
Result: True
Bindings: 
g=Antony
c=Susan
More solutions? [y(es)/N(o)/a(ll)] Result: True
Bindings: 
g=Antony
c=Peter
More solutions? [y(es)/N(o)/a(ll)] Result: True
Bindings: 
g=Bill
c=Andrew
More solutions? [y(es)/N(o)/a(ll)] Result: True
Bindings: 
g=Antony
c=Andrew
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
generating family_fun.fcy ...
Goal: (father child) =:= John :: Success
Free variables in goal: child
Result: success
Bindings: 
child=Susan
More solutions? [y(es)/N(o)/a(ll)] Result: success
Bindings: 
child=Peter
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
Goal: grandfather g c :: Success
Free variables in goal: g, c
Result: success
Bindings: 
g=Antony
c=Susan
More solutions? [y(es)/N(o)/a(ll)] Result: success
Bindings: 
g=Antony
c=Peter
More solutions? [y(es)/N(o)/a(ll)] Result: success
Bindings: 
g=Bill
c=Andrew
More solutions? [y(es)/N(o)/a(ll)] Result: success
Bindings: 
g=Antony
c=Andrew
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
generating horseman.fcy ...
Goal: horseman m h (int2nat 8) (int2nat 20) :: Success
Free variables in goal: m, h
Result: success
Bindings: 
m=S (S (S (S (S (S O)))))
h=S (S O)
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
Goal: horseman m h (S (S O)) f :: Success
Free variables in goal: m, h, f
Result: success
Bindings: 
m=O
h=S (S O)
f=S (S (S (S (S (S (S (S O)))))))
More solutions? [y(es)/N(o)/a(ll)] Result: success
Bindings: 
m=S O
h=S O
f=S (S (S (S (S (S O)))))
More solutions? [y(es)/N(o)/a(ll)] generating first.fcy ...
Goal: goal1 :: [Nat]
Result: [O,S O]
More solutions? [y(es)/N(o)/a(ll)] Goal: goal2 x y :: Success
Free variables in goal: x, y
Result: success
Bindings: 
x=S O
y=O
More solutions? [y(es)/N(o)/a(ll)] generating member.fcy ...
Goal: goal2 x :: Bool
Free variables in goal: x
Result: True
Bindings: 
x=2
More solutions? [y(es)/N(o)/a(ll)] Result: True
Bindings: 
x=3
More solutions? [y(es)/N(o)/a(ll)] generating colormap.fcy ...
Goal: goal1 l1 l2 l3 l4 :: Success
Free variables in goal: l1, l2, l3, l4
Result: success
Bindings: 
l1=Red
l2=Yellow
l3=Green
l4=Red
More solutions? [y(es)/N(o)/a(ll)] Result: success
Bindings: 
l1=Red
l2=Yellow
l3=Green
l4=Blue
More solutions? [y(es)/N(o)/a(ll)] Goal: goal2 l1 l2 l3 l4 :: Success
Free variables in goal: l1, l2, l3, l4
Result: success
Bindings: 
l1=Red
l2=Yellow
l3=Green
l4=Red
More solutions? [y(es)/N(o)/a(ll)] Result: success
Bindings: 
l1=Red
l2=Yellow
l3=Green
l4=Blue
More solutions? [y(es)/N(o)/a(ll)] generating account.fcy ...
Goal: goal1 b :: Success
Free variables in goal: b
Result: success
Bindings: 
b=250
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
Goal: goal2 b :: Success
Free variables in goal: b
Result: success
Bindings: 
b=150
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
Goal: goal3 s :: Success
Free variables in goal: s
Result: success
Bindings: 
s=[Deposit 100,Balance 100,Withdraw 30,Balance 70,Withdraw 30,Balance 40,Deposit 70,Balance 110,Withdraw 30,Balance 80,Withdraw 30,Balance 50]
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
generating maxtree.fcy ...
Goal: goal2 :: Btree Int
Result: Node (Node (Leaf 3) (Leaf 3)) (Node (Leaf 3) (Leaf 3))
More solutions? [y(es)/N(o)/a(ll)] generating assembler.fcy ...
Goal: goal :: [Int]
Result: [9,4,9,0]
More solutions? [y(es)/N(o)/a(ll)] generating ralign.fcy ...
Goal: goal1 :: [[Letter]]
Result: [[O,O,O,A,B],[O,A,B,C,D],[O,O,A,B,C],[A,B,C,D,E]]
More solutions? [y(es)/N(o)/a(ll)] Goal: goal2 :: [[Letter]]
Result: [[O,O,O,A,B],[O,A,B,C,D],[O,O,A,B,C],[A,B,C,D,E]]
More solutions? [y(es)/N(o)/a(ll)] generating tctest.fcy ...
f :: Int -> Int
i :: a -> a
k :: a -> Int
generating rectype.fcy ...
h :: ([Int],[Bool])
generating iodemo.fcy ...
Goal: dialog :: IO ()
Ihr Name?
Hallo michael, rueckwaerts lautet Ihr Name: leahcim
generating england.fcy ...
Goal: q1 x :: Success
Free variables in goal: x
Result: success
Bindings: 
x=Gloucester
More solutions? [y(es)/N(o)/a(ll)] Goal: q2 x y :: Success
Free variables in goal: x, y
Result: success
Bindings: 
x=Bristol
y=Bath
More solutions? [y(es)/N(o)/a(ll)] Goal: q4l :: [City]
Result: [Bristol,Taunton,Bath,Bournemouth,Gloucester,Torquay,Penzance,Plymouth,Exeter,Winchester,Dorchester,Cirencester,Truro,Cheltenham,Shaftesbury,Sherbourne]
More solutions? [y(es)/N(o)/a(ll)] Goal: q5l :: [City]
Result: [Salisbury,Gloucester,Cirencester,Cheltenham]
More solutions? [y(es)/N(o)/a(ll)] Goal: q7 x :: Success
Free variables in goal: x
Result: success
Bindings: 
x=Somerset
More solutions? [y(es)/N(o)/a(ll)] Goal: q10 :: Int
Result: 6
More solutions? [y(es)/N(o)/a(ll)] generating queens.fcy ...
Goal: queens [1,2,3,4] :: [Int]
Result: [2,4,1,3]
More solutions? [y(es)/N(o)/a(ll)] generating diamond.fcy ...
Goal: diamond 10 :: IO ()
                                       1    
                                  11       2    
                              21      12       3    
                          31      22      13       4    
                      41      32      23      14       5    
                  51      42      33      24      15       6    
              61      52      43      34      25      16       7    
          71      62      53      44      35      26      17       8    
      81      72      63      54      45      36      27      18       9    
  91      82      73      64      55      46      37      28      19      10    
      92      83      74      65      56      47      38      29      20    
          93      84      75      66      57      48      39      30    
              94      85      76      67      58      49      40    
                  95      86      77      68      59      50    
                      96      87      78      69      60    
                          97      88      79      70    
                              98      89      80    
                                  99      90    
                                     100    
generating chords.fcy ...
Goal: run sounds :: IO ()
Proposed chords:
Amin/8 (0)
Gmaj/8 (0) || Dmin/8 (0)
Gmaj/8 (0) || Gmaj7/8 (0)
Fmaj/8 (0) || Amin/8 (0)
Cmaj/8 (0)
Fmaj/4 Cmaj/4 (0) || Fmaj/4 Emin/4 (0) || Amin/4 Cmaj/4 (0) || Amin/4 Emin/4 (0)
Cmaj/8 (0)
Fmaj/4 Cmaj/4 (0) || Fmaj/4 Emin/4 (0) || Amin/4 Cmaj/4 (0) || Amin/4 Emin/4 (0)
Fmaj/8 (0) || Amin/8 (0)
Fmaj/8 (3) || Amin/8 (3)
Fmaj/4 Cmaj/4 (3) || Fmaj/4 Emin/4 (3) || Amin/4 Cmaj/4 (3) || Amin/4 Emin/4 (3)
Cmaj/8 (4) || Emin/8 (4) || Amin/8 (3)
Cmaj/8 (7)
Gmaj/4 Fmaj/4 (0) || Gmaj/4 Amin/4 (0) || Emin/4 Fmaj/4 (0) || Emin/4 Amin/4 (0)
Goal: run nicolas :: IO ()
Proposed chords:
Cmaj/8 (0)
Gmaj/8 (0) || Dmin/8 (0)
Fmaj/8 (6) || Amin/8 (6)
Gmaj/8 (0) || Emin/8 (0)
Cmaj/8 (0)
Gmaj/8 (0) || Dmin/8 (0)
Fmaj/8 (6) || Amin/8 (6)
Gmaj/8 (0) || Dmin/8 (0)
Cmaj/8 (0) || Emin/8 (0)
Dmin/8 (0)
Gmaj7/8 (6) || Dmin/8 (6)
Cmaj/8 (0)
Cmaj/8 (0)
Gmaj/8 (0) || Dmin/8 (0)
Fmaj/4 Gmaj/4 (0) || Fmaj/4 Emin/4 (0) || Amin/4 Gmaj/4 (0) || Amin/4 Emin/4 (0)
Fmaj/8 (0) || Amin/8 (0)
generating arithseq.fcy ...
Goal: l1 :: [Int]
Result: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
More solutions? [y(es)/N(o)/a(ll)] Goal: l2 :: [Int]
Result: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
More solutions? [y(es)/N(o)/a(ll)] Goal: l3 :: [Int]
Result: [1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77,81,85,89,93,97]
More solutions? [y(es)/N(o)/a(ll)] Goal: l4 :: [Int]
Result: [1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77]
More solutions? [y(es)/N(o)/a(ll)] generating multgen.fcy ...
Goal: goal1 :: [(Int,Int)]
Result: [(1,4),(1,5),(2,4),(2,5),(3,4),(3,5)]
More solutions? [y(es)/N(o)/a(ll)] Goal: goal2 :: [(Int,Int)]
Result: [(1,1),(2,1),(2,2),(3,1),(3,2),(3,3)]
More solutions? [y(es)/N(o)/a(ll)] Goal: goal3 :: [(Int,Int,Int)]
Result: [(3,4,5),(5,12,13),(6,8,10),(7,24,25),(8,15,17),(9,12,15),(9,40,41),(10,24,26),(12,16,20),(12,35,37),(14,48,50),(15,20,25),(15,36,39),(16,30,34),(18,24,30),(20,21,29),(21,28,35),(24,32,40),(27,36,45),(30,40,50)]
More solutions? [y(es)/N(o)/a(ll)] generating psort.fcy ...
Goal: goal 6 :: [Int]
Result: [1,2,3,4,5,6]
More solutions? [y(es)/N(o)/a(ll)] generating default.fcy ...
Goal: abs 0 :: Int
Result: 0
More solutions? [y(es)/N(o)/a(ll)] Goal: abs 3 :: Int
Result: 1
More solutions? [y(es)/N(o)/a(ll)] Goal: swap [3] :: [Int]
Result: [3]
More solutions? [y(es)/N(o)/a(ll)] Goal: swap [3,4] :: [Int]
Result: [4,3]
More solutions? [y(es)/N(o)/a(ll)] Goal: swap [3,4,5] :: [Int]
Result: [3,4,5]
More solutions? [y(es)/N(o)/a(ll)] generating casetest.fcy ...
Goal: swap [1] :: [Int]
Result: [1]
More solutions? [y(es)/N(o)/a(ll)] Goal: swap [1,2] :: [Int]
Result: [2,1]
More solutions? [y(es)/N(o)/a(ll)] Goal: swap [1,2,3] :: [Int]
Result: [1,2,3]
More solutions? [y(es)/N(o)/a(ll)] Goal: f [1,2] :: Int
Result: 152
More solutions? [y(es)/N(o)/a(ll)] Goal: g (Just "xyz") :: Bool
Result: True
More solutions? [y(es)/N(o)/a(ll)] Goal: g (Just "ab") :: Bool
Result: False
More solutions? [y(es)/N(o)/a(ll)] Goal: h [1,2] :: Bool
Result: True
More solutions? [y(es)/N(o)/a(ll)] Goal: h [1,3] :: Bool
Result: False
More solutions? [y(es)/N(o)/a(ll)] Goal: h [2,div 1 0] :: Bool
Result: False
More solutions? [y(es)/N(o)/a(ll)] generating expr_parser.fcy ...
Goal: ((expression val) "(10+5*2)/4") =:= [] :: Success
Free variables in goal: val
Result: success
Bindings: 
val=5
More solutions? [y(es)/N(o)/a(ll)] generating palindrome.fcy ...
Goal: (pali "abaaba") =:= [] :: Success
Result: success
More solutions? [y(es)/N(o)/a(ll)] Goal: pali5 :: [String]
Result: ["aaaaa","aabaa","ababa","abbba","baaab","babab","bbabb","bbbbb"]
More solutions? [y(es)/N(o)/a(ll)] generating mortgage.fcy ...
Goal: mortgage 100000.0 180.0 0.01 r 0.0 :: Success
Free variables in goal: r
Result: success
Bindings: 
r=1200.17
More solutions? [y(es)/N(o)/a(ll)] generating smm.fcy ...
Goal: smm l :: Success
Free variables in goal: l
Result: success
Bindings: 
l=[9,5,6,7,1,0,8,2]
More solutions? [y(es)/N(o)/a(ll)] generating accountport.fcy ...
Goal: goal1 b :: Success
Free variables in goal: b
Result: success
Bindings: 
b=250
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
Goal: goal2 b :: Success
Free variables in goal: b
Result: success
Bindings: 
b=[Deposit 100,Withdraw 30,Withdraw 30,Deposit 70,Withdraw 30,Withdraw 30]
More solutions? [y(es)/N(o)/a(ll)] No more solutions.
generating nameserver.fcy ...
Goal: gn1 :: IO ()
Answer: 0
Goal: gn2 :: IO ()
Answer: 0
Goal: pn1 :: IO ()
Goal: pn2 :: IO ()
Goal: gn1 :: IO ()
Answer: 42
Goal: gn2 :: IO ()
Answer: 43
Goal: closeServer :: IO ()
generating addserver.fcy ...
Goal: addClient "localhost" 3 4 :: IO ()
Answer: 7
Goal: stopServer "localhost" :: IO ()
